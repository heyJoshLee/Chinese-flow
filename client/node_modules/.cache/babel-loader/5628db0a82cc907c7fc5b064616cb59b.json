{"ast":null,"code":"import * as api from '../api';\nimport { CREATE_USER, GET_WORDS_FOR_LOGGED_IN_USER, UPDATE_USER } from '../types/index';\nimport { addFlashMessage } from './helpers.js';\nexport const createUser = userParams => async dispatch => {\n  try {\n    const {\n      data\n    } = api.createUser(userParams);\n    dispatch({\n      type: CREATE_USER,\n      payload: data\n    });\n    addFlashMessage(\"Successfully created account.\", dispatch);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getWordsForLoggedInUser = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getWordsForLoggedInUser();\n    console.log(data);\n    dispatch({\n      type: GET_WORDS_FOR_LOGGED_IN_USER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateLoggedInUser = userParams => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateLoggedInUser(userParams);\n    console.log(data);\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/actions/users.js"],"names":["api","CREATE_USER","GET_WORDS_FOR_LOGGED_IN_USER","UPDATE_USER","addFlashMessage","createUser","userParams","dispatch","data","type","payload","error","console","log","getWordsForLoggedInUser","updateLoggedInUser"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AACA,SAASC,WAAT,EAAsBC,4BAAtB,EAAoDC,WAApD,QAAuE,gBAAvE;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,MAAMC,UAAU,GAAIC,UAAD,IAAgB,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAWR,GAAG,CAACK,UAAJ,CAAeC,UAAf,CAAjB;AACAC,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER,WADC;AAEPS,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAIAJ,IAAAA,eAAe,CAAC,+BAAD,EAAkCG,QAAlC,CAAf;AACD,GAPD,CAOE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAXM;AAcP,OAAO,MAAMG,uBAAuB,GAAG,MAAM,MAAOP,QAAP,IAAoB;AAC/D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACc,uBAAJ,EAAvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,4BADC;AAEPQ,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAXM;AAcP,OAAO,MAAMI,kBAAkB,GAAIT,UAAD,IAAgB,MAAOC,QAAP,IAAoB;AACpE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACe,kBAAJ,CAAuBT,UAAvB,CAAvB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,WADC;AAEPO,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAXM","sourcesContent":["import * as api from '../api';\nimport { CREATE_USER, GET_WORDS_FOR_LOGGED_IN_USER, UPDATE_USER } from '../types/index';\nimport { addFlashMessage } from './helpers.js'; \n\nexport const createUser = (userParams) => async (dispatch) => {\n  try {\n    const { data } = api.createUser(userParams);\n    dispatch({\n      type: CREATE_USER,\n      payload: data\n    });\n    addFlashMessage(\"Successfully created account.\", dispatch);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport const getWordsForLoggedInUser = () => async (dispatch) => {\n  try {\n    const { data } = await api.getWordsForLoggedInUser();\n    console.log(data);\n    dispatch({\n      type: GET_WORDS_FOR_LOGGED_IN_USER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport const updateLoggedInUser = (userParams) => async (dispatch) => {\n  try {\n    const { data } = await api.updateLoggedInUser(userParams);\n    console.log(data);\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    })\n  } catch (error) {\n    console.log(error)\n  }\n}"]},"metadata":{},"sourceType":"module"}