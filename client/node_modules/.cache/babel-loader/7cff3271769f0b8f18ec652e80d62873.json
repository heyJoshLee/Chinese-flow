{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{getWords}from'../../actions/words';import{useDispatch}from'react-redux';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Words=function Words(){var dispatch=useDispatch();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),words=_useState2[0],setWords=_useState2[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dispatch(getWords());case 2:response=_context.sent;setWords(response);case 4:case\"end\":return _context.stop();}}},_callee);})),[]);var renderWords=function renderWords(){return words.map(function(word){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:\"/words/\".concat(word._id),children:word.simplified})}),/*#__PURE__*/_jsx(\"td\",{children:word.traditional}),/*#__PURE__*/_jsx(\"td\",{children:word.english})]});});};if(!words){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}console.log(words);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"Words\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Simplified\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Traditional\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"English\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:renderWords()})]})]});};export default Words;","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/words/Words.js"],"names":["React","useEffect","useState","getWords","useDispatch","Link","Words","dispatch","words","setWords","response","renderWords","map","word","_id","simplified","traditional","english","console","log"],"mappings":"idAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,IAAT,KAAqB,kBAArB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CACA,cAA0BF,QAAQ,CAAC,IAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eAEAR,SAAS,sEAAE,sKACYM,CAAAA,QAAQ,CAACJ,QAAQ,EAAT,CADpB,QACLO,QADK,eAETD,QAAQ,CAACC,QAAD,CAAR,CAFS,sDAAF,GAGN,EAHM,CAAT,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,MAAOH,CAAAA,KAAK,CAACI,GAAN,CAAU,SAAAC,IAAI,CAAI,CACvB,mBACE,mCACI,iCACE,KAAC,IAAD,EAAM,EAAE,kBAAYA,IAAI,CAACC,GAAjB,CAAR,UACGD,IAAI,CAACE,UADR,EADF,EADJ,cAME,oBAAKF,IAAI,CAACG,WAAV,EANF,cAOE,oBAAKH,IAAI,CAACI,OAAV,EAPF,GADF,CAWD,CAZM,CAAP,CAaD,CAdD,CAgBA,GAAI,CAACT,KAAL,CAAY,CAAE,mBAAO,mCAAP,CAA8B,CAC5CU,OAAO,CAACC,GAAR,CAAYX,KAAZ,EACA,mBACE,oCACE,WAAI,SAAS,CAAC,aAAd,mBADF,cAEE,eAAO,SAAS,CAAC,OAAjB,wBACE,oCACE,mCACE,WAAI,KAAK,CAAC,KAAV,wBADF,cAEE,WAAI,KAAK,CAAC,KAAV,yBAFF,cAGE,WAAI,KAAK,CAAC,KAAV,qBAHF,GADF,EADF,cAQE,uBACCG,WAAW,EADZ,EARF,GAFF,GADF,CAiBD,CA5CD,CA8CA,cAAeL,CAAAA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getWords } from '../../actions/words';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Words = () => {\n  const dispatch = useDispatch();\n  const [words, setWords] = useState(null)\n\n  useEffect( async () => {\n    let response = await dispatch(getWords());\n    setWords(response);\n  }, [])\n\n  const renderWords = () => {\n    return words.map(word => {\n      return (\n        <tr>\n            <td>\n              <Link to={`/words/${word._id}`}>\n                {word.simplified}\n              </Link>\n            </td>\n          <td>{word.traditional}</td>\n          <td>{word.english}</td>\n        </tr>\n      )\n    });\n  }\n\n  if (!words) { return <div>Loading...</div> }\n  console.log(words)\n  return (\n    <div>\n      <h1 className=\"text-center\">Words</h1>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Simplified</th>\n            <th scope=\"col\">Traditional</th>\n            <th scope=\"col\">English</th>\n          </tr>\n        </thead>\n        <tbody>\n        {renderWords()}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Words\n"]},"metadata":{},"sourceType":"module"}