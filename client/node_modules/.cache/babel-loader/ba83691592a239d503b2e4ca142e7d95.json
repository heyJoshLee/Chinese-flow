{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/chinese-app/client/src/components/words/Words.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getWords } from '../../actions/words';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Words = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [words, setWords] = useState(null);\n  useEffect(async () => {\n    let response = await dispatch(getWords());\n    setWords(response);\n  }, []);\n\n  const renderWords = () => {\n    return words.map(word => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/words/${word._id}`,\n            children: word.simplified\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: word.traditional\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: word.english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  if (!words) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }, this);\n  }\n\n  console.log(words);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Simplified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Traditional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderWords()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Words, \"0iHOxt5FL/zrpcwzscIjgjOu8+A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Words;\nexport default Words;\n\nvar _c;\n\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/words/Words.js"],"names":["React","useEffect","useState","getWords","useDispatch","Link","Words","dispatch","words","setWords","response","renderWords","map","word","_id","simplified","traditional","english","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAE,YAAY;AACrB,QAAIS,QAAQ,GAAG,MAAMH,QAAQ,CAACJ,QAAQ,EAAT,CAA7B;AACAM,IAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxB,WAAOH,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACvB,0BACE;AAAA,gCACI;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASA,IAAI,CAACC,GAAI,EAA7B;AAAA,sBACGD,IAAI,CAACE;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAME;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA,oBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZM,CAAP;AAaD,GAdD;;AAgBA,MAAI,CAACT,KAAL,EAAY;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA8B;;AAC5CU,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBACCG,WAAW;AADZ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5CD;;GAAML,K;UACaF,W;;;KADbE,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getWords } from '../../actions/words';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Words = () => {\n  const dispatch = useDispatch();\n  const [words, setWords] = useState(null)\n\n  useEffect( async () => {\n    let response = await dispatch(getWords());\n    setWords(response);\n  }, [])\n\n  const renderWords = () => {\n    return words.map(word => {\n      return (\n        <tr>\n            <td>\n              <Link to={`/words/${word._id}`}>\n                {word.simplified}\n              </Link>\n            </td>\n          <td>{word.traditional}</td>\n          <td>{word.english}</td>\n        </tr>\n      )\n    });\n  }\n\n  if (!words) { return <div>Loading...</div> }\n  console.log(words)\n  return (\n    <div>\n      <h1 className=\"text-center\">Words</h1>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Simplified</th>\n            <th scope=\"col\">Traditional</th>\n            <th scope=\"col\">English</th>\n          </tr>\n        </thead>\n        <tbody>\n        {renderWords()}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Words\n"]},"metadata":{},"sourceType":"module"}