{"ast":null,"code":"import React,{useEffect}from'react';import RemoveWordButton from'./RemoveWordButton';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";var WordsResourceHas=function WordsResourceHas(_ref){var resource=_ref.resource,words=_ref.words;if(!words){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}console.log(resource);var renderWords=function renderWords(){if(words.length===0){return/*#__PURE__*/_jsx(\"div\",{children:\" No words \"});}return words.map(function(word){if(!word){return/*#__PURE__*/_jsx(\"span\",{});}return/*#__PURE__*/_jsx(RemoveWordButton,{resource:resource,word:word});});};return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:renderWords()});};export default WordsResourceHas;","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/resources/words/WordsResourceHas.js"],"names":["React","useEffect","RemoveWordButton","useSelector","WordsResourceHas","resource","words","console","log","renderWords","length","map","word"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,OAASC,WAAT,KAA4B,aAA5B,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAyB,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZC,KAAY,MAAZA,KAAY,CAGhD,GAAI,CAACA,KAAL,CAAa,CAAE,mBAAO,mCAAP,CAA6B,CAC5CC,OAAO,CAACC,GAAR,CAAYH,QAAZ,EACA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIH,KAAK,CAACI,MAAN,GAAiB,CAArB,CAAyB,CAAE,mBAAO,mCAAP,CAA8B,CACzD,MAAOJ,CAAAA,KAAK,CAACK,GAAN,CAAU,SAAAC,IAAI,CAAI,CACvB,GAAI,CAACA,IAAL,CAAW,CAAE,mBAAO,eAAP,CAAqB,CAClC,mBAAO,KAAC,gBAAD,EAAkB,QAAQ,CAAEP,QAA5B,CAAsC,IAAI,CAAEO,IAA5C,EAAP,CACD,CAHM,CAAP,CAID,CAND,CAQA,mBACE,YAAK,SAAS,CAAC,KAAf,UACGH,WAAW,EADd,EADF,CAKD,CAlBD,CAoBA,cAAeL,CAAAA,gBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport RemoveWordButton from './RemoveWordButton';\nimport { useSelector } from 'react-redux';\n\nconst WordsResourceHas = ({ resource, words }) => {\n\n\n  if (!words ) { return <div>Loading...</div>}\n  console.log(resource)\n  const renderWords = () => {\n    if (words.length === 0 ) { return <div> No words </div> }\n    return words.map(word => {\n      if (!word) { return <span></span>}\n      return <RemoveWordButton resource={resource} word={word} />\n    })\n  }\n\n  return (\n    <div className=\"row\">\n      {renderWords()}\n    </div>\n  )\n}\n\nexport default WordsResourceHas;\n"]},"metadata":{},"sourceType":"module"}