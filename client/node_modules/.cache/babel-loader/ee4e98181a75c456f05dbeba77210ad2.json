{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/chinese-app/client/src/components/words/Word.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CheckCircleFill, XCircleFill } from 'react-bootstrap-icons';\nimport { getWord } from '../../actions/words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Word = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const wordId = props.match.params.id;\n  const word = useSelector(state => state.word);\n  useEffect(() => {\n    dispatch(getWord(wordId));\n  }, []);\n\n  if (!word) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  const renderCircle = () => {\n    if (true) {\n      return /*#__PURE__*/_jsxDEV(CheckCircleFill, {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(XCircleFill, {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: renderCircle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"\\u4EBA/\\u4EBA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"r\\xE9n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u6211\\u662F\\u4EBA\\u3002 / \\u6211\\u662F\\u4EBA\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"I am a person.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/placeholder.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Groups:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }, this), \" hsk1\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Word, \"Prn5jEybygVm+n6+VJ+KffPU7Jc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Word;\nexport default Word;\n\nvar _c;\n\n$RefreshReg$(_c, \"Word\");","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/words/Word.js"],"names":["React","useEffect","useDispatch","useSelector","CheckCircleFill","XCircleFill","getWord","Word","props","dispatch","wordId","match","params","id","word","state","renderCircle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,uBAA7C;AACA,SAASC,OAAT,QAAwB,qBAAxB;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,MAAM,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACA,QAAMC,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACH,OAAO,CAACI,MAAD,CAAR,CAAR;AACD,GAFM,EAEJ,EAFI,CAAT;;AAIA,MAAI,CAACI,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAME,YAAY,GAAG,MAAM;AACzB,QAAI,IAAJ,EAAU;AACR,0BAAO,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,WAAD;AAAa,QAAA,KAAK,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAA,gBAAKA,YAAY;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAK,MAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCD;;GAAMT,I;UACaL,W,EAEJC,W;;;KAHTI,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CheckCircleFill, XCircleFill } from 'react-bootstrap-icons';\nimport { getWord } from '../../actions/words';\n\n\nconst Word = (props) => {\n  const dispatch = useDispatch();\n  const wordId = props.match.params.id;\n  const word = useSelector(state => state.word)\n  useEffect(() => {\n      dispatch(getWord(wordId));\n    }, [])\n\n  if (!word) {\n    return <div>Loading...</div>\n  }\n\n  const renderCircle = () => {\n    if (true) {\n      return <CheckCircleFill color=\"green\" />\n    } else {\n      return <XCircleFill color=\"red\"/>;\n    }\n  }\n\n  return (\n    <div className=\"text-center\">\n      <h2>{renderCircle()}</h2>\n      <br/>\n      <h1 className=\"text-center\">人/人</h1>\n      <h2>rén</h2>\n      <h3>person</h3>\n      <p>我是人。 / 我是人。</p>\n      <p>I am a person.</p>\n      <img src=\"/placeholder.png\" />\n      <p className=\"mt-3\"><strong>Groups:</strong> hsk1</p>\n    </div>\n  )\n}\n\nexport default Word;"]},"metadata":{},"sourceType":"module"}