{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/chinese-app/client/src/components/resources/words/Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getResource, getWordsForResource } from '../../../actions/resources';\nimport { getWordBySimplified } from '../../../actions/words';\nimport WordsResourceHas from './WordsResourceHas';\nimport WordsToCheckContainer from './WordsToCheckContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Edit = props => {\n  _s();\n\n  const resourceId = props.match.params.id;\n  const dispatch = useDispatch();\n  const searchResult = useSelector(state => state.searchResult);\n  const [characterId, setChracterId] = useState(\"\");\n  const [words, setWords] = useState([]);\n  useEffect(async () => {\n    dispatch(getResource(resourceId));\n    setWords(await dispatch(getWordsForResource(resourceId)));\n  }, [searchResult]);\n  const resource = useSelector(state => state.resource);\n\n  const renderWords = () => {\n    return resource.words.map(word => {\n      console.log(word);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-primary\",\n        children: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const renderSearchResult = () => {\n    if (!searchResult) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Make a search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    } else if (searchResult.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No result found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: searchResult[0].simplified\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: addWord,\n          className: \"ml-3 btn btn-primary\",\n          children: \" Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  if (!resource || !words) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 36\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"Edit Words for \", resource.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/resources/${resourceId}/edit`,\n      children: `< Back to resource`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: [\"Current Words \", resource.words.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: renderSearchResult()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordsResourceHas, {\n      words: words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordsToCheckContainer, {\n      resourceId: resourceId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Edit, \"+Lx0JAPj7CDZPbVudtiuWveC9Do=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/resources/words/Edit.js"],"names":["React","useEffect","useState","Link","useDispatch","useSelector","getResource","getWordsForResource","getWordBySimplified","WordsResourceHas","WordsToCheckContainer","Edit","props","resourceId","match","params","id","dispatch","searchResult","state","characterId","setChracterId","words","setWords","resource","renderWords","map","word","console","log","renderSearchResult","length","simplified","addWord","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getResource, getWordsForResource } from '../../../actions/resources';\nimport { getWordBySimplified } from '../../../actions/words';\nimport WordsResourceHas from './WordsResourceHas';\nimport WordsToCheckContainer from './WordsToCheckContainer';\n\nconst Edit = (props) => {\n  const resourceId = props.match.params.id;\n  const dispatch = useDispatch();\n  const searchResult = useSelector(state => state.searchResult)\n  const [characterId, setChracterId] = useState(\"\");\n  const [words, setWords] = useState([]);\n  \n  useEffect( async() => {\n    dispatch(getResource(resourceId));\n    setWords(await dispatch(getWordsForResource(resourceId)));\n  }, [searchResult]);\n\n  const resource = useSelector(state => state.resource)\n\n  const renderWords = () => {\n    return resource.words.map(word => {\n      console.log(word)\n      return <div className=\"btn btn-primary\">{word}</div>;\n    });\n  }\n\n\n  const renderSearchResult = () => {\n    if (!searchResult) {\n      return <div>Make a search...</div>\n    } else if (searchResult.length === 0) {\n      return <div>No result found</div>\n    } else {\n      return (\n        <>\n         <div>{searchResult[0].simplified}</div>\n         <div onClick={addWord} className=\"ml-3 btn btn-primary\"> Add</div>\n        </>\n      )\n    }\n  }  \n\n\n  if (!resource || !words) {return <div>Loading...</div>}\n\n  return (\n    <div>\n      <h1 className=\"text-center\">Edit Words for {resource.title} </h1>\n      <Link to={`/resources/${resourceId}/edit`}>{`< Back to resource`}</Link>\n      <div className=\"row\">\n          <div className=\"col-6\">\n            <h2 className=\"text-center\">Current Words {resource.words.length}</h2> \n          </div>\n\n\n          \n         \n\n          <div className=\"col-2\">\n            {renderSearchResult()}\n          </div>\n      </div>\n      <WordsResourceHas words={words} />\n      <hr/>\n\n      <WordsToCheckContainer resourceId={resourceId} />\n    </div>\n  )\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}