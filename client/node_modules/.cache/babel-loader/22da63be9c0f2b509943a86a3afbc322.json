{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/chinese-app/client/src/components/resources/words/WordsToCheckContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUniqueWords } from '../../../actions/words';\nimport AddWordSection from './AddWordsSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WordsToCheckContainer = ({\n  resourceId\n}) => {\n  _s();\n\n  const [textToCheck, setTextToCheck] = useState({\n    text: \"\"\n  });\n  const [wordsToAdd, setWordsToAdd] = useState([]);\n  const dispatch = useDispatch();\n\n  const handleClick = async () => {\n    let response = await dispatch(getUniqueWords(textToCheck));\n    setWordsToAdd(response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Paste Words To Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: textToCheck.text,\n      onChange: e => setTextToCheck({\n        text: e.target.value\n      }),\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-4 btn btn-primary btn-block\",\n      onClick: handleClick,\n      children: \"Search Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AddWordSection, {\n      resource: resource,\n      words: wordsToAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordsToCheckContainer, \"tDC+0qMxSKR5ih94jhfi+BmsSGI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = WordsToCheckContainer;\nexport default WordsToCheckContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordsToCheckContainer\");","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/resources/words/WordsToCheckContainer.js"],"names":["React","useState","useDispatch","useSelector","getUniqueWords","AddWordSection","WordsToCheckContainer","resourceId","textToCheck","setTextToCheck","text","wordsToAdd","setWordsToAdd","dispatch","handleClick","response","e","target","value","resource"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAG9C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAiCR,QAAQ,CAAC;AAC9CS,IAAAA,IAAI,EAAE;AADwC,GAAD,CAA/C;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA+BX,QAAQ,CAAC,EAAD,CAA7C;AAEA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,WAAW,GAAG,YAAY;AAC9B,QAAIC,QAAQ,GAAG,MAAMF,QAAQ,CAACT,cAAc,CAACI,WAAD,CAAf,CAA7B;AACAI,IAAAA,aAAa,CAACG,QAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,KAAK,EAAEP,WAAW,CAACE,IAA7B;AAAmC,MAAA,QAAQ,EAAGM,CAAD,IAAOP,cAAc,CAAC;AAACC,QAAAA,IAAI,EAAEM,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAD,CAAlE;AAA4F,MAAA,SAAS,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,YAFF,eAIC;AAAQ,MAAA,SAAS,EAAC,gCAAlB;AAAmD,MAAA,OAAO,EAAEJ,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEK,QAA1B;AAAoC,MAAA,KAAK,EAAER;AAA3C;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1BD;;GAAML,qB;UASaJ,W;;;KATbI,qB;AA4BN,eAAeA,qBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUniqueWords } from '../../../actions/words';\nimport AddWordSection from './AddWordsSection';\n\nconst WordsToCheckContainer = ({resourceId}) => {\n\n\n  const [textToCheck, setTextToCheck ] = useState({\n    text: \"\"\n  });\n\n  const [wordsToAdd, setWordsToAdd ] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const handleClick = async () => { \n    let response = await dispatch(getUniqueWords(textToCheck));\n    setWordsToAdd(response); \n  }\n\n  return (\n    <div>\n      <h2 className=\"text-center\">Paste Words To Check</h2>\n      <textarea value={textToCheck.text} onChange={(e) => setTextToCheck({text: e.target.value})} className=\"form-control\">\n     </textarea>\n     <button className=\"mt-4 btn btn-primary btn-block\" onClick={handleClick}>Search Words</button>\n     <AddWordSection resource={resource} words={wordsToAdd}/>\n    </div>\n\n  )\n}\n\nexport default WordsToCheckContainer;\n"]},"metadata":{},"sourceType":"module"}