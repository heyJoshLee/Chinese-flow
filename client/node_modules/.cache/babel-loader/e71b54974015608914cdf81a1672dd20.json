{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/chinese-app/client/src/components/resources/words/WordsToCheckContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUniqueWords } from '../../../actions/words';\nimport AddWordSection from './AddWordsSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WordsToCheckContainer = ({\n  resource\n}) => {\n  _s();\n\n  const [loading, setloading] = useState(false);\n  const [textToCheck, setTextToCheck] = useState({\n    text: \"\"\n  });\n  const [wordsToAdd, setWordsToAdd] = useState([]);\n  const dispatch = useDispatch();\n\n  const handleClick = async () => {\n    setloading(true);\n    let response = await dispatch(getUniqueWords(textToCheck));\n    setWordsToAdd(response);\n    setloading(false);\n  };\n\n  const renderAddWordSection = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(AddWordSection, {\n        resource: resource,\n        words: wordsToAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Paste Words To Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: textToCheck.text,\n      onChange: e => setTextToCheck({\n        text: e.target.value\n      }),\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-4 btn btn-primary btn-block\",\n      onClick: handleClick,\n      children: \"Search Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this), renderAddWordSection()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordsToCheckContainer, \"Y7rtBpoopNrjFXXBeXEN64tn+Kk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = WordsToCheckContainer;\nexport default WordsToCheckContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordsToCheckContainer\");","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/resources/words/WordsToCheckContainer.js"],"names":["React","useState","useDispatch","useSelector","getUniqueWords","AddWordSection","WordsToCheckContainer","resource","loading","setloading","textToCheck","setTextToCheck","text","wordsToAdd","setWordsToAdd","dispatch","handleClick","response","renderAddWordSection","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE5C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAyBR,QAAQ,CAAC,KAAD,CAAvC;AAEA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAiCV,QAAQ,CAAC;AAC9CW,IAAAA,IAAI,EAAE;AADwC,GAAD,CAA/C;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA+Bb,QAAQ,CAAC,EAAD,CAA7C;AAEA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,WAAW,GAAG,YAAY;AAC9BP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIQ,QAAQ,GAAG,MAAMF,QAAQ,CAACX,cAAc,CAACM,WAAD,CAAf,CAA7B;AACAI,IAAAA,aAAa,CAACG,QAAD,CAAb;AACAR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GALD;;AAOA,QAAMS,oBAAoB,GAAG,MAAM;AACjC,QAAIV,OAAJ,EAAa;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAED,QAA1B;AAAoC,QAAA,KAAK,EAAEM;AAA3C;AAAA;AAAA;AAAA;AAAA,cAAP;AAED;AACF,GAPD;;AASA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,KAAK,EAAEH,WAAW,CAACE,IAA7B;AAAmC,MAAA,QAAQ,EAAGO,CAAD,IAAOR,cAAc,CAAC;AAACC,QAAAA,IAAI,EAAEO,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAD,CAAlE;AAA4F,MAAA,SAAS,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,YAFF,eAIC;AAAQ,MAAA,SAAS,EAAC,gCAAlB;AAAmD,MAAA,OAAO,EAAEL,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,EAKGE,oBAAoB,EALvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAtCD;;GAAMZ,qB;UAUaJ,W;;;KAVbI,qB;AAwCN,eAAeA,qBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUniqueWords } from '../../../actions/words';\nimport AddWordSection from './AddWordsSection';\n\nconst WordsToCheckContainer = ({resource}) => {\n\n  const [loading, setloading ] = useState(false)\n\n  const [textToCheck, setTextToCheck ] = useState({\n    text: \"\"\n  });\n\n  const [wordsToAdd, setWordsToAdd ] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const handleClick = async () => { \n    setloading(true);\n    let response = await dispatch(getUniqueWords(textToCheck));\n    setWordsToAdd(response); \n    setloading(false)\n  }\n\n  const renderAddWordSection = () => {\n    if (loading) {\n      return <div>Loading...</div>\n    } else {\n      return <AddWordSection resource={resource} words={wordsToAdd}/>\n\n    }\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-center\">Paste Words To Check</h2>\n      <textarea value={textToCheck.text} onChange={(e) => setTextToCheck({text: e.target.value})} className=\"form-control\">\n     </textarea>\n     <button className=\"mt-4 btn btn-primary btn-block\" onClick={handleClick}>Search Words</button>\n      {renderAddWordSection()}\n    </div>\n\n  )\n}\n\nexport default WordsToCheckContainer;\n"]},"metadata":{},"sourceType":"module"}