{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as api from'../api';import{GET_WORDS,GET_WORD,CREATE_WORD,DELETE_WORD,UPDATE_WORD,SEARCH_WORD}from'../types/index';export var createWord=function createWord(wordParams){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$api$createWord,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.createWord(wordParams);case 3:_yield$api$createWord=_context.sent;data=_yield$api$createWord.data;dispatch({type:CREATE_WORD,payload:data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getWord=function getWord(wordId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$api$getWord,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.getWord(wordId);case 3:_yield$api$getWord=_context2.sent;data=_yield$api$getWord.data;dispatch({type:GET_WORD,payload:data});return _context2.abrupt(\"return\",data);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getWords=function getWords(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$api$getWords,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return api.getWords();case 3:_yield$api$getWords=_context3.sent;data=_yield$api$getWords.data;dispatch({type:GET_WORD,payload:data});return _context3.abrupt(\"return\",data);case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var updateWord=function updateWord(wordId,wordParams){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var _yield$api$updateWord,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return api.updateWord(wordId,wordParams);case 3:_yield$api$updateWord=_context4.sent;data=_yield$api$updateWord.data;dispatch({type:UPDATE_WORD,payload:data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,8]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var deleteWord=function deleteWord(wordId){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var _yield$api$deleteWord,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return api.deleteWord(wordId);case 2:_yield$api$deleteWord=_context5.sent;data=_yield$api$deleteWord.data;dispatch({type:DELETE_WORD,payload:data});case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var getWordBySimplified=function getWordBySimplified(character){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var _yield$api$getWordByS,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return api.getWordBySimplified(character);case 2:_yield$api$getWordByS=_context6.sent;data=_yield$api$getWordByS.data;dispatch({type:SEARCH_WORD,payload:data});case 5:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var getUniqueWords=function getUniqueWords(text){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var _yield$api$getUniqueW,data;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return api.getUniqueWords(text);case 2:_yield$api$getUniqueW=_context7.sent;data=_yield$api$getUniqueW.data;return _context7.abrupt(\"return\",data);case 5:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x7){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/actions/words.js"],"names":["api","GET_WORDS","GET_WORD","CREATE_WORD","DELETE_WORD","UPDATE_WORD","SEARCH_WORD","createWord","wordParams","dispatch","data","type","payload","console","log","getWord","wordId","getWords","updateWord","deleteWord","getWordBySimplified","character","getUniqueWords","text"],"mappings":"qTAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,QAArB,CACA,OAASC,SAAT,CACEC,QADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,WAJF,CAKEC,WALF,KAKoB,gBALpB,CAOA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,iGAAgB,iBAAOC,QAAP,uLAEfT,CAAAA,GAAG,CAACO,UAAJ,CAAeC,UAAf,CAFe,4CAE9BE,IAF8B,uBAE9BA,IAF8B,CAGtCD,QAAQ,CAAC,CACPE,IAAI,CAAER,WADC,CAEPS,OAAO,CAAEF,IAFF,CAAD,CAAR,CAHsC,+EAQtCG,OAAO,CAACC,GAAR,cARsC,oEAAhB,gEAAnB,CAYP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,MAAD,kGAAY,kBAAOP,QAAP,0LAERT,CAAAA,GAAG,CAACe,OAAJ,CAAYC,MAAZ,CAFQ,0CAEvBN,IAFuB,oBAEvBA,IAFuB,CAG/BD,QAAQ,CAAC,CACPE,IAAI,CAAET,QADC,CAEPU,OAAO,CAAEF,IAFF,CAAD,CAAR,CAH+B,iCAOxBA,IAPwB,6DAS/BG,OAAO,CAACC,GAAR,eAT+B,sEAAZ,kEAAhB,CAaP,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,mGAAM,kBAAOR,QAAP,2LAEHT,CAAAA,GAAG,CAACiB,QAAJ,EAFG,2CAElBP,IAFkB,qBAElBA,IAFkB,CAG1BD,QAAQ,CAAC,CACPE,IAAI,CAAET,QADC,CAEPU,OAAO,CAAEF,IAFF,CAAD,CAAR,CAH0B,iCAOnBA,IAPmB,6DAS1BG,OAAO,CAACC,GAAR,eAT0B,sEAAN,kEAAjB,CAaP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,MAAD,CAASR,UAAT,kGAAwB,kBAAOC,QAAP,6LAEvBT,CAAAA,GAAG,CAACkB,UAAJ,CAAeF,MAAf,CAAuBR,UAAvB,CAFuB,6CAEtCE,IAFsC,uBAEtCA,IAFsC,CAG9CD,QAAQ,CAAC,CACPE,IAAI,CAAEN,WADC,CAEPO,OAAO,CAAEF,IAFF,CAAD,CAAR,CAH8C,mFAQ9CG,OAAO,CAACC,GAAR,eAR8C,sEAAxB,kEAAnB,CAYP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,MAAD,kGAAY,kBAAOP,QAAP,4KACbT,CAAAA,GAAG,CAACmB,UAAJ,CAAeH,MAAf,CADa,6CAC5BN,IAD4B,uBAC5BA,IAD4B,CAEpCD,QAAQ,CAAC,CACPE,IAAI,CAAEP,WADC,CAEPQ,OAAO,CAAEF,IAFF,CAAD,CAAR,CAFoC,wDAAZ,kEAAnB,CAQP,MAAO,IAAMU,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,SAAD,kGAAe,kBAAOZ,QAAP,4KACzBT,CAAAA,GAAG,CAACoB,mBAAJ,CAAwBC,SAAxB,CADyB,6CACxCX,IADwC,uBACxCA,IADwC,CAEhDD,QAAQ,CAAC,CACPE,IAAI,CAAEL,WADC,CAEPM,OAAO,CAAEF,IAFF,CAAD,CAAR,CAFgD,wDAAf,kEAA5B,CAQP,MAAO,IAAMY,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,kGAAU,kBAAOd,QAAP,4KACfT,CAAAA,GAAG,CAACsB,cAAJ,CAAmBC,IAAnB,CADe,6CAC9Bb,IAD8B,uBAC9BA,IAD8B,kCAE/BA,IAF+B,0DAAV,kEAAvB","sourcesContent":["import * as api from '../api';\nimport { GET_WORDS, \n  GET_WORD, \n  CREATE_WORD, \n  DELETE_WORD, \n  UPDATE_WORD, \n  SEARCH_WORD} from '../types/index';\n\nexport const createWord = (wordParams) => async (dispatch) => {\n  try {\n    const { data } = await api.createWord(wordParams);\n    dispatch({\n      type: CREATE_WORD,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getWord = (wordId) => async (dispatch) => {\n  try {\n    const { data } = await api.getWord(wordId);\n    dispatch({\n      type: GET_WORD,\n      payload: data\n    })\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getWords = () => async (dispatch) => {\n  try {\n    const { data } = await api.getWords();\n    dispatch({\n      type: GET_WORD,\n      payload: data\n    })\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const updateWord = (wordId, wordParams) => async (dispatch) => {\n  try {\n    const { data } = await api.updateWord(wordId, wordParams); \n    dispatch({\n      type: UPDATE_WORD,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const deleteWord = (wordId) => async (dispatch) => {\n  const { data } = await api.deleteWord(wordId);\n  dispatch({\n    type: DELETE_WORD,\n    payload: data\n  });\n}\n\nexport const getWordBySimplified = (character) => async (dispatch) => {\n  const { data } = await api.getWordBySimplified(character);\n  dispatch({\n    type: SEARCH_WORD,\n    payload: data\n  })\n}\n\nexport const getUniqueWords = (text) => async (dispatch) => {\n  const { data } = await api.getUniqueWords(text);\n  return data \n}"]},"metadata":{},"sourceType":"module"}