{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/chinese-app/client/src/components/resources/words/AddWordsSection.js\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddWordButton from './AddWordButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddWordsSection = ({\n  words,\n  resource\n}) => {\n  const renderWords = () => {\n    return words.map(word => {\n      //CHECK TO SEE IF RESOURCE ALREADY HAS WORD\n      let containsWord = resource.words.some(w => {\n        return w.characterId === word._id;\n      });\n\n      if (containsWord) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          className: \"ml-1 mr-1 btn btn-danger\",\n          children: word.simplified\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(AddWordButton, {\n          resource: resource,\n          word: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n\n  if (!words) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Search for words...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Unique Words in this Resource\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), renderWords()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AddWordsSection;\nexport default AddWordsSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWordsSection\");","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/resources/words/AddWordsSection.js"],"names":["React","useDispatch","useSelector","AddWordButton","AddWordsSection","words","resource","renderWords","map","word","containsWord","some","w","characterId","_id","simplified"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAE7C,QAAMC,WAAW,GAAG,MAAM;AACxB,WAAOF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AAC3B;AACI,UAAIC,YAAY,GAAGJ,QAAQ,CAACD,KAAT,CAAeM,IAAf,CAAoBC,CAAC,IAAI;AAC1C,eAAOA,CAAC,CAACC,WAAF,KAAkBJ,IAAI,CAACK,GAA9B;AACD,OAFkB,CAAnB;;AAGA,UAAIJ,YAAJ,EAAkB;AAChB,4BAAO;AAAQ,UAAA,QAAQ,MAAhB;AAAiB,UAAA,SAAS,EAAC,0BAA3B;AAAA,oBAAuDD,IAAI,CAACM;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BACE,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAET,QAAzB;AAAmC,UAAA,IAAI,EAAEG;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;AACF,KAZM,CAAP;AAaD,GAdD;;AAgBA,MAAI,CAACJ,KAAL,EAAY;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAAsC;;AAEpD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,WAAW,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1BD;;KAAMH,e;AA4BN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddWordButton from './AddWordButton';\n\nconst AddWordsSection = ({words, resource}) => {\n\n  const renderWords = () => {\n    return words.map(word => {\n  //CHECK TO SEE IF RESOURCE ALREADY HAS WORD\n      let containsWord = resource.words.some(w => {\n        return w.characterId === word._id;\n      });\n      if (containsWord) {\n        return <button disabled className=\"ml-1 mr-1 btn btn-danger\">{word.simplified}</button>\n      } else {\n        return (\n          <AddWordButton resource={resource} word={word} />\n        )\n      }\n    })\n  }\n\n  if (!words) { return <div>Search for words...</div>}\n\n  return (\n    <div className=\"mt-2\">\n      <h3 className=\"text-center\">Unique Words in this Resource</h3>\n      {renderWords()}\n    </div>\n  )\n}\n\nexport default AddWordsSection;\n"]},"metadata":{},"sourceType":"module"}