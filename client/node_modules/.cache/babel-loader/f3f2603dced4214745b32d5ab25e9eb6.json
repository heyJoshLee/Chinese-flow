{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{getWord}from'../../actions/words';import AddWordToListButton from'./AddWordToListButton';import RemoveWordFromListButton from'./RemoveWordFromListButton';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var WordButton=function WordButton(_ref){var word=_ref.word;var knownWords=useSelector(function(state){return state.knownWords;});var _useState=useState(null),_useState2=_slicedToArray(_useState,2),fullWord=_useState2[0],setFullWord=_useState2[1];var dispatch=useDispatch();useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setFullWord;_context.next=3;return dispatch(getWord(word.characterId));case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);})),[]);if(!fullWord){return/*#__PURE__*/_jsx(_Fragment,{children:\" \"});}var wordIsKnown=function wordIsKnown(){return knownWords.some(function(knownWord){return knownWord._id===word.characterId;});};if(wordIsKnown()){return/*#__PURE__*/_jsx(RemoveWordFromListButton,{fullWord:fullWord});}else{return/*#__PURE__*/_jsx(AddWordToListButton,{fullWord:fullWord});}};export default WordButton;","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/resources/WordButtonContainer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getWord","AddWordToListButton","RemoveWordFromListButton","WordButton","word","knownWords","state","fullWord","setFullWord","dispatch","characterId","wordIsKnown","some","knownWord","_id"],"mappings":"idAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,OAAT,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4BAArC,C,gGAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC/B,GAAMC,CAAAA,UAAU,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,UAAV,EAAN,CAA9B,CACA,cAAgCR,QAAQ,CAAC,IAAD,CAAxC,wCAAOU,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEAF,SAAS,sEAAC,+IACRY,WADQ,uBACUC,CAAAA,QAAQ,CAACT,OAAO,CAACI,IAAI,CAACM,WAAN,CAAR,CADlB,qHAAD,GAEN,EAFM,CAAT,CAIA,GAAI,CAACH,QAAL,CAAgB,CACd,mBAAO,8BAAP,CACD,CAED,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,MAAON,CAAAA,UAAU,CAACO,IAAX,CAAgB,SAAAC,SAAS,CAAI,CAClC,MAAOA,CAAAA,SAAS,CAACC,GAAV,GAAkBV,IAAI,CAACM,WAA9B,CACD,CAFM,CAAP,CAGD,CAJD,CAMA,GAAIC,WAAW,EAAf,CAAmB,CACjB,mBAAO,KAAC,wBAAD,EAA0B,QAAQ,CAAEJ,QAApC,EAAP,CACD,CAFD,IAEO,CACL,mBAAO,KAAC,mBAAD,EAAqB,QAAQ,CAAEA,QAA/B,EAAP,CACD,CAGF,CA1BD,CA4BA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getWord} from '../../actions/words';\nimport AddWordToListButton from './AddWordToListButton';\nimport RemoveWordFromListButton from './RemoveWordFromListButton';\n\nconst WordButton = ({ word }) => {\n  const knownWords = useSelector(state => state.knownWords)\n  const [fullWord, setFullWord] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(async () => {\n    setFullWord(await dispatch(getWord(word.characterId)));\n  }, [])\n\n  if (!fullWord ) {\n    return <> </>\n  }\n\n  const wordIsKnown = () => {\n    return knownWords.some(knownWord => {\n      return knownWord._id === word.characterId\n    })\n  }\n  \n  if (wordIsKnown()) {\n    return <RemoveWordFromListButton fullWord={fullWord} />\n  } else {\n    return <AddWordToListButton fullWord={fullWord} />\n  }\n\n  \n}\n\nexport default WordButton;"]},"metadata":{},"sourceType":"module"}