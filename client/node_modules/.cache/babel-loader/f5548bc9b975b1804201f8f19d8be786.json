{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{CheckCircleFill,XCircleFill}from'react-bootstrap-icons';import{getWord}from'../../actions/words';import{Pencil}from'react-bootstrap-icons';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Word=function Word(props){var dispatch=useDispatch();var wordId=props.match.params.id;var word=useSelector(function(state){return state.word;});useEffect(function(){dispatch(getWord(wordId));},[]);if(!word){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}var renderCircle=function renderCircle(){if(true){return/*#__PURE__*/_jsx(CheckCircleFill,{color:\"green\"});}else{return/*#__PURE__*/_jsx(XCircleFill,{color:\"red\"});}};if(!word){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}var renderCollections=function renderCollections(){return word.collections.join(', ');};return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[renderCircle(),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3\",children:/*#__PURE__*/_jsx(Link,{to:\"/words/\".concat(word._id,\"/edit\"),children:/*#__PURE__*/_jsx(Pencil,{size:32})})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"h1\",{className:\"text-center\",children:[word.simplified,\" / \",word.traditional]}),/*#__PURE__*/_jsx(\"h2\",{children:word.pinyin}),/*#__PURE__*/_jsx(\"h3\",{children:word.english}),/*#__PURE__*/_jsxs(\"p\",{children:[word.simplifiedSentence,\" / \",word.traditionalSentence]}),/*#__PURE__*/_jsx(\"p\",{children:word.english}),/*#__PURE__*/_jsx(\"img\",{src:word.image}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Groups:\"}),renderCollections()]})]});};export default Word;","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/words/Word.js"],"names":["React","useEffect","useDispatch","useSelector","CheckCircleFill","XCircleFill","getWord","Pencil","Link","Word","props","dispatch","wordId","match","params","id","word","state","renderCircle","renderCollections","collections","join","_id","simplified","traditional","pinyin","english","simplifiedSentence","traditionalSentence","image"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,eAAT,CAA0BC,WAA1B,KAA6C,uBAA7C,CACA,OAASC,OAAT,KAAwB,qBAAxB,CACA,OAASC,MAAT,KAAuB,uBAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,GAAMU,CAAAA,MAAM,CAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC,CACA,GAAMC,CAAAA,IAAI,CAAGb,WAAW,CAAC,SAAAc,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CACAf,SAAS,CAAC,UAAM,CACZU,QAAQ,CAACL,OAAO,CAACM,MAAD,CAAR,CAAR,CACD,CAFM,CAEJ,EAFI,CAAT,CAIA,GAAI,CAACI,IAAL,CAAW,CACT,mBAAO,mCAAP,CACD,CAED,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAI,IAAJ,CAAU,CACR,mBAAO,KAAC,eAAD,EAAiB,KAAK,CAAC,OAAvB,EAAP,CACD,CAFD,IAEO,CACL,mBAAO,KAAC,WAAD,EAAa,KAAK,CAAC,KAAnB,EAAP,CACD,CACF,CAND,CAQA,GAAI,CAACF,IAAL,CAAW,CACT,mBAAO,mCAAP,CACD,CAED,GAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,MAAOH,CAAAA,IAAI,CAACI,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAP,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,sBACGH,YAAY,EADf,cAEE,aAAM,SAAS,CAAC,MAAhB,uBACE,KAAC,IAAD,EAAM,EAAE,kBAAYF,IAAI,CAACM,GAAjB,SAAR,uBACE,KAAC,MAAD,EAAQ,IAAI,CAAE,EAAd,EADF,EADF,EAFF,GADF,cASE,aATF,cAUE,YAAI,SAAS,CAAC,aAAd,WAA6BN,IAAI,CAACO,UAAlC,OAAiDP,IAAI,CAACQ,WAAtD,GAVF,cAWE,oBAAKR,IAAI,CAACS,MAAV,EAXF,cAYE,oBAAKT,IAAI,CAACU,OAAV,EAZF,cAaE,qBAAIV,IAAI,CAACW,kBAAT,OAAgCX,IAAI,CAACY,mBAArC,GAbF,cAcE,mBAAIZ,IAAI,CAACU,OAAT,EAdF,cAeE,YAAK,GAAG,CAAEV,IAAI,CAACa,KAAf,EAfF,cAgBE,WAAG,SAAS,CAAC,MAAb,wBAAoB,mCAApB,CAA6CV,iBAAiB,EAA9D,GAhBF,GADF,CAoBD,CAhDD,CAkDA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CheckCircleFill, XCircleFill } from 'react-bootstrap-icons';\nimport { getWord } from '../../actions/words';\nimport { Pencil } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\n\nconst Word = (props) => {\n  const dispatch = useDispatch();\n  const wordId = props.match.params.id;\n  const word = useSelector(state => state.word)\n  useEffect(() => {\n      dispatch(getWord(wordId));\n    }, [])\n\n  if (!word) {\n    return <div>Loading...</div>\n  }\n\n  const renderCircle = () => {\n    if (true) {\n      return <CheckCircleFill color=\"green\" />\n    } else {\n      return <XCircleFill color=\"red\"/>;\n    }\n  }\n\n  if (!word) {\n    return <div>Loading...</div>\n  }\n\n  const renderCollections = () => {\n    return word.collections.join(', ')\n  }\n  \n  return (\n    <div className=\"text-center\">\n      <h2>\n        {renderCircle()}\n        <span className=\"ml-3\">\n          <Link to={`/words/${word._id}/edit`}>\n            <Pencil size={32} />\n          </Link>\n        </span>\n      </h2>\n      <br/>\n      <h1 className=\"text-center\">{word.simplified} / {word.traditional}</h1>\n      <h2>{word.pinyin}</h2>\n      <h3>{word.english}</h3>\n      <p>{word.simplifiedSentence} / {word.traditionalSentence}</p>\n      <p>{word.english}</p>\n      <img src={word.image}/>\n      <p className=\"mt-3\"><strong>Groups:</strong>{renderCollections()}</p>\n    </div>\n  )\n}\n\nexport default Word;"]},"metadata":{},"sourceType":"module"}