{"ast":null,"code":"var _JSON$parse;\n\nimport axios from 'axios';\nlet token = (_JSON$parse = JSON.parse(localStorage.getItem('auth'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\nlet configFromLocalStorage = null;\n\nif (token) {\n  configFromLocalStorage = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n}\n\nconst BASEURL = 'http://localhost:5000';\nconst RESOURCES_URL = `${BASEURL}/resources`;\nconst WORDS_URL = `${BASEURL}/words`;\nconst LOGIN_URL = `${BASEURL}/auth/login`;\nconst USERS_URL = `${BASEURL}/users`;\nconst CARDS_URL = `${BASEURL}/cards`; // Users\n\nexport const logIn = logInParams => axios.post(LOGIN_URL, logInParams); //export const updateUser = (userParams, config = configFromLocalStorage) => axios.patch(`${USERS_URL}/${userId}`, userParams, config)\n\nexport const createUser = userParams => axios.post(USERS_URL, userParams); //TODO GET USER ID TO PASS TO PARAMS\n\nexport const getWordsForLoggedInUser = (userToken = token) => {\n  return axios.get(`${BASEURL}/words`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n}; // resources \n\nexport const getResources = (userToken = token) => {\n  return axios.get(RESOURCES_URL, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const createResource = (newResource, userToken = token) => {\n  return axios.post(RESOURCES_URL, newResource, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const getResource = (resourceId, userToken = token) => {\n  return axios.get(`${RESOURCES_URL}/${resourceId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const deleteResource = (resourceId, userToken = token) => {\n  return axios.delete(`${RESOURCES_URL}/${resourceId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const updateResource = (resourceId, resourceParams, userToken = token) => {\n  console.log(`${RESOURCES_URL}/${resourceId}`);\n  return axios.patch(`${RESOURCES_URL}/${resourceId}`, resourceParams);\n}; // Words\n\nexport const createWord = (newWord, userToken = token) => {\n  return axios.post(WORDS_URL, newWord, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const getWord = (wordId, userToken = token) => {\n  return axios.get(`${WORDS_URL}/${wordId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const getWords = (userToken = token) => {\n  return axios.get(`${WORDS_URL}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const deleteWord = (wordId, userToken = token) => {\n  return axios.delete(`${WORDS_URL}/${wordId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const updateWord = (wordId, wordParams, userToken = token) => {\n  return axios.patch(`${WORDS_URL}/${wordId}`, wordParams);\n};\nexport const getWordBySimplified = (character, userToken = token) => {\n  return axios.get(`${WORDS_URL}/getWordBySimplified/${character}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const getWordsForResource = (resourceId, userToken = token) => {\n  return axios.get(`${RESOURCES_URL}/${resourceId}/words`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const addWordToResource = (resourceId, wordId, userToken = token) => {\n  return axios.post(`${RESOURCES_URL}/${resourceId}/addWord`, {\n    characterId: wordId\n  }, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const getUniqueWords = (text, userToken = token) => {\n  return axios.post(`${WORDS_URL}/getUniqueWords`, text, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const removeWordFromResource = (resourceId, wordId, userToken = token) => {\n  return axios.delete(`${RESOURCES_URL}/${resourceId}/words/${wordId}`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const addCardToUser = (wordId, userToken = token) => {\n  return axios.post(`${CARDS_URL}/add`, {\n    wordId\n  }, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};\nexport const removeCardFromUser = (wordId, userToken = token) => {\n  return axios.delete(`${CARDS_URL}/${wordId}/remove`, {\n    headers: {\n      \"x-auth-token\": userToken\n    }\n  });\n};","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/api/index.js"],"names":["axios","token","JSON","parse","localStorage","getItem","configFromLocalStorage","headers","BASEURL","RESOURCES_URL","WORDS_URL","LOGIN_URL","USERS_URL","CARDS_URL","logIn","logInParams","post","createUser","userParams","getWordsForLoggedInUser","userToken","get","getResources","createResource","newResource","getResource","resourceId","deleteResource","delete","updateResource","resourceParams","console","log","patch","createWord","newWord","getWord","wordId","getWords","deleteWord","updateWord","wordParams","getWordBySimplified","character","getWordsForResource","addWordToResource","characterId","getUniqueWords","text","removeWordFromResource","addCardToUser","removeCardFromUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nlet token = JSON.parse(localStorage.getItem('auth'))?.token;\nlet configFromLocalStorage = null;\nif (token) {\n  configFromLocalStorage = { \n    headers: { \n      \"x-auth-token\": token\n    }\n  }\n} \n\nconst BASEURL = 'http://localhost:5000';\nconst RESOURCES_URL = `${BASEURL}/resources`;\nconst WORDS_URL = `${BASEURL}/words`;\nconst LOGIN_URL = `${BASEURL}/auth/login`;\nconst USERS_URL = `${BASEURL}/users`;\nconst CARDS_URL = `${BASEURL}/cards`;\n\n// Users\n\nexport const logIn = (logInParams) => axios.post(LOGIN_URL, logInParams);\n\n//export const updateUser = (userParams, config = configFromLocalStorage) => axios.patch(`${USERS_URL}/${userId}`, userParams, config)\n\nexport const createUser = (userParams) => axios.post(USERS_URL, userParams);\n\n\n//TODO GET USER ID TO PASS TO PARAMS\nexport const getWordsForLoggedInUser = (userToken = token) => {\n  return axios.get(`${BASEURL}/words`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\n// resources \nexport const getResources = (userToken = token) => {\n  return axios.get(RESOURCES_URL, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const createResource = (newResource, userToken = token) => {\n  return axios.post(RESOURCES_URL, newResource, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const getResource = (resourceId, userToken = token) => {\n  return axios.get(`${RESOURCES_URL}/${resourceId}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const deleteResource = (resourceId, userToken = token) => {\n  return axios.delete(`${RESOURCES_URL}/${resourceId}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const updateResource = (resourceId, resourceParams, userToken = token) => {\n  console.log(`${RESOURCES_URL}/${resourceId}`)\n  return axios.patch(`${RESOURCES_URL}/${resourceId}`, resourceParams);\n}\n\n// Words\n\nexport const createWord = (newWord, userToken = token) => {\n  return axios.post(WORDS_URL, newWord, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\n\nexport const getWord = (wordId, userToken = token) => {\n  return axios.get(`${WORDS_URL}/${wordId}`,  {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const getWords = (userToken = token) => {\n  return axios.get(`${WORDS_URL}`,  {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const deleteWord = (wordId, userToken = token) => {\n  return axios.delete(`${WORDS_URL}/${wordId}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const updateWord = (wordId, wordParams, userToken = token) => {\n  return axios.patch(`${WORDS_URL}/${wordId}`, wordParams);\n}\n\nexport const getWordBySimplified = (character, userToken = token) => {\n  return axios.get(`${WORDS_URL}/getWordBySimplified/${character}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const getWordsForResource = (resourceId, userToken = token) => {\n  return axios.get(`${RESOURCES_URL}/${resourceId}/words`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const addWordToResource = (resourceId, wordId, userToken = token) => {\n  return axios.post(`${RESOURCES_URL}/${resourceId}/addWord`, {characterId: wordId}, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const getUniqueWords = (text, userToken = token ) => {\n  return axios.post(`${WORDS_URL}/getUniqueWords`, text,  {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const removeWordFromResource = (resourceId, wordId, userToken = token) => {\n  return axios.delete(`${RESOURCES_URL}/${resourceId}/words/${wordId}`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  })\n}\n\nexport const addCardToUser = (wordId, userToken = token) => {\n  return axios.post(`${CARDS_URL}/add`, {wordId}, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}\n\nexport const removeCardFromUser = (wordId, userToken = token) => {\n  return axios.delete(`${CARDS_URL}/${wordId}/remove`, {\n    headers: { \n      \"x-auth-token\": userToken\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}