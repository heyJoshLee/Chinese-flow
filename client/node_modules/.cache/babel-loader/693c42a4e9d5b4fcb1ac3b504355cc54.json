{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/chinese-app/client/src/components/resources/words/Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getResource, getWordsForResource } from '../../../actions/resources';\nimport { getWordBySimplified } from '../../../actions/words';\nimport WordsResourceHas from './WordsResourceHas';\nimport WordsToCheckContainer from './WordsToCheckContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = props => {\n  _s();\n\n  const resourceId = props.match.params.id;\n  const dispatch = useDispatch();\n  const [words, setWords] = useState([]);\n  const resource = useSelector(state => state.resource);\n  useEffect(async () => {\n    dispatch(getResource(resourceId));\n  }, [resource]);\n\n  if (!resource || !words) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 36\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: [\"Edit Words for \", resource.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/resources/${resourceId}/edit`,\n      children: `< Back to resource`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Current Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WordsResourceHas, {\n          words: resource.words\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordsToCheckContainer, {\n      resourceId: resourceId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Edit, \"lL31NlK5AzTQRNgffq5sqtX44xI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/resources/words/Edit.js"],"names":["React","useEffect","useState","Link","useDispatch","useSelector","getResource","getWordsForResource","getWordBySimplified","WordsResourceHas","WordsToCheckContainer","Edit","props","resourceId","match","params","id","dispatch","words","setWords","resource","state","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,4BAAjD;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAtC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMkB,QAAQ,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AAGAnB,EAAAA,SAAS,CAAE,YAAW;AACpBgB,IAAAA,QAAQ,CAACX,WAAW,CAACO,UAAD,CAAZ,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;;AAKA,MAAI,CAACA,QAAD,IAAa,CAACF,KAAlB,EAAyB;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA6B;;AAEvD,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,oCAA4CE,QAAQ,CAACE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,cAAaT,UAAW,OAAnC;AAAA,gBAA6C;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEO,QAAQ,CAACF;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,qBAAD;AAAuB,MAAA,UAAU,EAAEL;AAAnC;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5BD;;GAAMF,I;UAEaP,W,EAEAC,W;;;KAJbM,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getResource, getWordsForResource } from '../../../actions/resources';\nimport { getWordBySimplified } from '../../../actions/words';\nimport WordsResourceHas from './WordsResourceHas';\nimport WordsToCheckContainer from './WordsToCheckContainer';\n\nconst Edit = (props) => {\n  const resourceId = props.match.params.id;\n  const dispatch = useDispatch();\n  const [words, setWords] = useState([]);\n  const resource = useSelector(state => state.resource)\n  \n\n  useEffect( async() => {\n    dispatch(getResource(resourceId));\n  }, [resource]);\n\n\n  if (!resource || !words) {return <div>Loading...</div>}\n\n  return (\n    <div>\n      <h1 className=\"text-center\">Edit Words for {resource.title} </h1>\n      <Link to={`/resources/${resourceId}/edit`}>{`< Back to resource`}</Link>\n      <div className=\"row\">\n          <div className=\"col-12\">\n            <h2 className=\"text-center\">Current Words</h2> \n            <WordsResourceHas words={resource.words} />\n          </div>\n      </div>\n      <hr/>\n      <WordsToCheckContainer resourceId={resourceId} />\n    </div>\n  )\n}\n\nexport default Edit;\n"]},"metadata":{},"sourceType":"module"}