{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mymac/repos/chinese-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as api from'../api';import{CREATE_USER,GET_WORDS_FOR_LOGGED_IN_USER,UPDATE_USER}from'../types/index';import{addFlashMessage}from'./helpers.js';export var createUser=function createUser(userParams){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _api$createUser,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{_api$createUser=api.createUser(userParams),data=_api$createUser.data;dispatch({type:CREATE_USER,payload:data});addFlashMessage(\"Successfully created account.\",dispatch);}catch(error){console.log(error);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getWordsForLoggedInUser=function getWordsForLoggedInUser(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$api$getWordsFo,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.getWordsForLoggedInUser();case 3:_yield$api$getWordsFo=_context2.sent;data=_yield$api$getWordsFo.data;console.log(data);dispatch({type:GET_WORDS_FOR_LOGGED_IN_USER,payload:data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateLoggedInUser=function updateLoggedInUser(userParams){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$api$updateLogg,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return api.updateLoggedInUser(userParams);case 3:_yield$api$updateLogg=_context3.sent;data=_yield$api$updateLogg.data;console.log(data);dispatch({type:UPDATE_USER,payload:data});addFlashMessage(\"Successfully updated account.\",dispatch);addFlashMessage(\"Please log in again.\",dispatch);_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[0,11]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/actions/users.js"],"names":["api","CREATE_USER","GET_WORDS_FOR_LOGGED_IN_USER","UPDATE_USER","addFlashMessage","createUser","userParams","dispatch","data","type","payload","error","console","log","getWordsForLoggedInUser","updateLoggedInUser"],"mappings":"qTAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,QAArB,CACA,OAASC,WAAT,CAAsBC,4BAAtB,CAAoDC,WAApD,KAAuE,gBAAvE,CACA,OAASC,eAAT,KAAgC,cAAhC,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,iGAAgB,iBAAOC,QAAP,2IACxC,GAAI,iBACeP,GAAG,CAACK,UAAJ,CAAeC,UAAf,CADf,CACME,IADN,iBACMA,IADN,CAEFD,QAAQ,CAAC,CACPE,IAAI,CAAER,WADC,CAEPS,OAAO,CAAEF,IAFF,CAAD,CAAR,CAIAJ,eAAe,CAAC,+BAAD,CAAkCG,QAAlC,CAAf,CACD,CAAC,MAAOI,KAAP,CAAc,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAVuC,sDAAhB,gEAAnB,CAcP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,mGAAM,kBAAOP,QAAP,6LAElBP,CAAAA,GAAG,CAACc,uBAAJ,EAFkB,6CAEjCN,IAFiC,uBAEjCA,IAFiC,CAGzCI,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACAD,QAAQ,CAAC,CACPE,IAAI,CAAEP,4BADC,CAEPQ,OAAO,CAAEF,IAFF,CAAD,CAAR,CAJyC,mFASzCI,OAAO,CAACC,GAAR,eATyC,sEAAN,kEAAhC,CAcP,MAAO,IAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACT,UAAD,kGAAgB,kBAAOC,QAAP,6LAEvBP,CAAAA,GAAG,CAACe,kBAAJ,CAAuBT,UAAvB,CAFuB,6CAEtCE,IAFsC,uBAEtCA,IAFsC,CAG9CI,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACAD,QAAQ,CAAC,CACPE,IAAI,CAAEN,WADC,CAEPO,OAAO,CAAEF,IAFF,CAAD,CAAR,CAIAJ,eAAe,CAAC,+BAAD,CAAkCG,QAAlC,CAAf,CACAH,eAAe,CAAC,sBAAD,CAAyBG,QAAzB,CAAf,CAT8C,qFAW9CK,OAAO,CAACC,GAAR,eAX8C,uEAAhB,kEAA3B","sourcesContent":["import * as api from '../api';\nimport { CREATE_USER, GET_WORDS_FOR_LOGGED_IN_USER, UPDATE_USER } from '../types/index';\nimport { addFlashMessage } from './helpers.js'; \n\nexport const createUser = (userParams) => async (dispatch) => {\n  try {\n    const { data } = api.createUser(userParams);\n    dispatch({\n      type: CREATE_USER,\n      payload: data\n    });\n    addFlashMessage(\"Successfully created account.\", dispatch);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport const getWordsForLoggedInUser = () => async (dispatch) => {\n  try {\n    const { data } = await api.getWordsForLoggedInUser();\n    console.log(data);\n    dispatch({\n      type: GET_WORDS_FOR_LOGGED_IN_USER,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport const updateLoggedInUser = (userParams) => async (dispatch) => {\n  try {\n    const { data } = await api.updateLoggedInUser(userParams);\n    console.log(data);\n    dispatch({\n      type: UPDATE_USER,\n      payload: data\n    });\n    addFlashMessage(\"Successfully updated account.\", dispatch);\n    addFlashMessage(\"Please log in again.\", dispatch);\n  } catch (error) {\n    console.log(error)\n  }\n}"]},"metadata":{},"sourceType":"module"}