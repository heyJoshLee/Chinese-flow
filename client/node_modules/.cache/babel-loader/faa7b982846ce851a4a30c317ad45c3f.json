{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/repos/chinese-app/client/src/components/resources/Resource.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport WordsContainer from './WordsContainer';\nimport BackLink from '../shared/BackLink';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getResource } from '../../actions/resources';\nimport { Pencil } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport { getWordsForLoggedInUser } from '../../actions/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resource = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const resourceId = props.match.params.id;\n  const resource = useSelector(state => state.resource);\n  const knownWords = useSelector(state => state.knownWords);\n  useEffect(() => {\n    dispatch(getResource(resourceId));\n    dispatch(getWordsForLoggedInUser());\n  }, []);\n\n  const percentageKnown = () => {\n    let wordsKnown = 0;\n    resource.words.forEach(word => {\n      knownWords.forEach(knownWord => {\n        let knowWord = knownWord._id === word.characterId;\n\n        if (knowWord) {\n          wordsKnown += 1;\n        }\n      });\n    });\n    return Math.floor(wordsKnown / resource.words.length * 100);\n  };\n\n  if (!resource) {\n    dispatch(getResource(resourceId));\n    dispatch(getWordsForLoggedInUser());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  const renderPercentageBar = () => {\n    const percent = percentageKnown();\n    let barColor;\n\n    if (percent >= 0.8) {\n      barColor = 'success';\n    } else if (percent >= 0.6) {\n      barColor = 'warning';\n    } else {\n      barColor = 'danger';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 progress\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-bar btn-${barColor}`,\n        role: \"progressbar\",\n        style: {\n          width: `${percent}%`\n        },\n        \"aria-valuenow\": 25,\n        \"aria-valuemin\": 0,\n        \"aria-valuemax\": 100,\n        children: `${percent}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BackLink, {\n      url: \"/resources\",\n      text: \"< Back to resources\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resource\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [renderPercentageBar(), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: [resource.title, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-4 hover\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/resources/${resource._id}/edit`,\n                children: /*#__PURE__*/_jsxDEV(Pencil, {\n                  size: 32\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: resource.image,\n            className: \"resource__main-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center resource__description\",\n            children: resource.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: resource.link,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 btn-block btn btn-primary\",\n              children: \"Go to Resource\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WordsContainer, {\n            words: resource.words\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Resource, \"OK7uqM4YwUInAiYuC6udZE1JyFs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Resource;\nexport default Resource;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resource\");","map":{"version":3,"sources":["/Users/mymac/repos/chinese-app/client/src/components/resources/Resource.js"],"names":["React","useEffect","WordsContainer","BackLink","useDispatch","useSelector","getResource","Pencil","Link","getWordsForLoggedInUser","Resource","props","dispatch","resourceId","match","params","id","resource","state","knownWords","percentageKnown","wordsKnown","words","forEach","word","knownWord","knowWord","_id","characterId","Math","floor","length","renderPercentageBar","percent","barColor","width","title","image","description","link"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,uBAAT,QAAwC,qBAAxC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,UAAU,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAAtC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,UAAU,GAAGd,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAA9B;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACN,WAAW,CAACO,UAAD,CAAZ,CAAR;AACAD,IAAAA,QAAQ,CAACH,uBAAuB,EAAxB,CAAR;AACD,GAHM,EAGJ,EAHI,CAAT;;AAKA,QAAMW,eAAe,GAAG,MAAM;AAC5B,QAAIC,UAAU,GAAG,CAAjB;AACAJ,IAAAA,QAAQ,CAACK,KAAT,CAAeC,OAAf,CAAuBC,IAAI,IAAI;AAC7BL,MAAAA,UAAU,CAACI,OAAX,CAAmBE,SAAS,IAAI;AAC9B,YAAIC,QAAQ,GAAGD,SAAS,CAACE,GAAV,KAAkBH,IAAI,CAACI,WAAtC;;AACA,YAAIF,QAAJ,EAAc;AACZL,UAAAA,UAAU,IAAI,CAAd;AACD;AACF,OALD;AAMD,KAPD;AAQA,WAAOQ,IAAI,CAACC,KAAL,CAAWT,UAAU,GAAGJ,QAAQ,CAACK,KAAT,CAAeS,MAA5B,GAAqC,GAAhD,CAAP;AACD,GAXD;;AAcA,MAAI,CAACd,QAAL,EAAe;AACbL,IAAAA,QAAQ,CAACN,WAAW,CAACO,UAAD,CAAZ,CAAR;AACAD,IAAAA,QAAQ,CAACH,uBAAuB,EAAxB,CAAR;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMuB,mBAAmB,GAAG,MAAM;AAChC,UAAMC,OAAO,GAAGb,eAAe,EAA/B;AACA,QAAIc,QAAJ;;AACA,QAAID,OAAO,IAAI,GAAf,EAAoB;AAClBC,MAAAA,QAAQ,GAAG,SAAX;AACD,KAFD,MAEO,IAAID,OAAO,IAAI,GAAf,EAAoB;AACzBC,MAAAA,QAAQ,GAAG,SAAX;AACD,KAFM,MAEA;AACLA,MAAAA,QAAQ,GAAG,QAAX;AACD;;AACF,wBACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAG,oBAAmBA,QAAS,EAA7C;AAAgD,QAAA,IAAI,EAAC,aAArD;AAAmE,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAG,GAAEF,OAAQ;AAAnB,SAA1E;AAAkG,yBAAe,EAAjH;AAAqH,yBAAe,CAApI;AAAuI,yBAAe,GAAtJ;AAAA,kBAA6J,GAAEA,OAAQ;AAAvK;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA,GAfD;;AAiBA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,GAAG,EAAC,YAAd;AAA2B,MAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,qBACGD,mBAAmB,EADtB,eAEE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,uBACGf,QAAQ,CAACmB,KADZ,eAEE;AAAM,cAAA,SAAS,EAAC,YAAhB;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,cAAanB,QAAQ,CAACU,GAAI,OAArC;AAAA,uCACE,QAAC,MAAD;AAAQ,kBAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE;AAAK,YAAA,GAAG,EAAEV,QAAQ,CAACoB,KAAnB;AAA0B,YAAA,SAAS,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE;AAAG,YAAA,SAAS,EAAC,mCAAb;AAAA,sBAAkDpB,QAAQ,CAACqB;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AAAG,YAAA,MAAM,EAAC,QAAV;AAAmB,YAAA,IAAI,EAAErB,QAAQ,CAACsB,IAAlC;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAeE,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAEtB,QAAQ,CAACK;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAzED;;GAAMZ,Q;UACaN,W,EAEAC,W,EACEA,W;;;KAJfK,Q;AA2EN,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport WordsContainer from './WordsContainer';\nimport BackLink from '../shared/BackLink';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { getResource } from '../../actions/resources';\nimport { Pencil } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\nimport { getWordsForLoggedInUser } from '../../actions/users';\n\nconst Resource = (props) => {\n  const dispatch = useDispatch();\n  const resourceId = props.match.params.id;\n  const resource = useSelector(state => state.resource);\n  const knownWords = useSelector(state => state.knownWords)\n  useEffect(() => {\n      dispatch(getResource(resourceId));\n      dispatch(getWordsForLoggedInUser());\n    }, [])\n\n  const percentageKnown = () => {\n    let wordsKnown = 0\n    resource.words.forEach(word => {\n      knownWords.forEach(knownWord => {\n        let knowWord = knownWord._id === word.characterId;\n        if (knowWord) {\n          wordsKnown += 1;\n        }\n      })\n    });\n    return Math.floor(wordsKnown / resource.words.length * 100);\n  }\n\n\n  if (!resource) {\n    dispatch(getResource(resourceId));\n    dispatch(getWordsForLoggedInUser());\n    return <div>Loading...</div>\n  }\n\n  const renderPercentageBar = () => {\n    const percent = percentageKnown();\n    let barColor;\n    if (percent >= 0.8) {\n      barColor = 'success';\n    } else if (percent >= 0.6) {\n      barColor = 'warning';\n    } else {\n      barColor = 'danger';\n    }\n   return(\n    <div className=\"mt-3 progress\">\n     <div className={`progress-bar btn-${barColor}`} role=\"progressbar\" style={{width: `${percent}%`}} aria-valuenow={25} aria-valuemin={0} aria-valuemax={100}>{`${percent}%`}</div>\n    </div>\n   ) \n  }\n\n  return (\n    <div>\n      <BackLink url=\"/resources\" text=\"< Back to resources\" />\n      <div className=\"resource\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            {renderPercentageBar()}\n            <h1 className=\"text-center\">\n              {resource.title}\n              <span className=\"ml-4 hover\">\n                <Link to={`/resources/${resource._id}/edit`}>\n                  <Pencil size={32} />\n                </Link>\n              </span>\n            </h1> \n            <img src={resource.image} className=\"resource__main-image\" />\n            <p className=\"text-center resource__description\">{resource.description}</p>\n            <a target=\"_blank\" href={resource.link}>\n              <div className=\"mb-4 btn-block btn btn-primary\">Go to Resource</div>\n            </a>\n            <WordsContainer words={resource.words} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Resource;\n"]},"metadata":{},"sourceType":"module"}